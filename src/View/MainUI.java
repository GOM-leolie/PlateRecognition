
package View;

import Controller.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.*;
import java.io.File;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author leo
 */
public class MainUI extends javax.swing.JFrame {

    MainController controller;
    
    /**
     * Creates new form MainUI
     */
    public MainUI(MainController newController) {
        initComponents();
        controller = newController;
        
        populateProcessingOptions();
    }
    
    void populateImageInput(File imageFile)
    {
       try
       {
           /**
            * Reading the image from the given file to image stream 
            * and re-sizing it based on canvas size.
            */
           Image image = ImageIO.read(imageFile);
           
           int canvasWidth = jPanelContent.getWidth();
           int canvasHeight = jPanelContent.getHeight();
                      
           int imageWidth = image.getWidth(null);
           int imageHeight = image.getHeight(null);
                                 
           /**
            * Checking if image is landscape or not. 
            * Then need to calculate what sizing we need to use to scale the image
            * to adapt with the canvas.
           **/
           if (imageWidth > imageHeight)
           {
               double ratio = (double) imageHeight / imageWidth;
               imageWidth = (int) (canvasWidth * 0.8);
               imageHeight = (int) (ratio * imageWidth);
           }
           else
           {
               double ratio = (double) imageWidth / (double) imageHeight;
               imageHeight = (int) (canvasHeight * 0.8);
               imageWidth = (int) (ratio * imageHeight);
           }
           
           Image scaledImage = image.getScaledInstance(imageWidth, imageHeight, Image.SCALE_SMOOTH);
           ImageIcon imageIcon = new ImageIcon(scaledImage);
           
           /**
            * Creating two labels for the title and as the input image container.
            * Then added it to Content Panel and repaint.
            */
           JLabel jLblImgInput = new JLabel("Input Image");
           jLblImgInput.setSize(200, 20);
           jLblImgInput.setFont(new Font("Serif", Font.BOLD, 20));
           
           jLblImgInput.setLocation(20, 20);
           
           JLabel jImgInput = new JLabel(imageIcon);
           jImgInput.setSize(imageWidth, imageHeight);
           jImgInput.setLocation(20, 50);
           
           jPanelContent.removeAll();
           jPanelContent.add(jLblImgInput);
           jPanelContent.add(jImgInput);
           jPanelContent.validate();
           jPanelContent.repaint();
       }
       catch (Exception e)
       {
          JOptionPane.showMessageDialog(this, "Error Occured\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE );
       }
    }
    
    /**
     * This function will populate the list of image processing techniques 
     * available to be performed. 
     * Value will be supplied by the controllers.
     */
    void populateProcessingOptions()
    {
        ArrayList<String> operations = new ArrayList<String>();
        
        JLabel jLblOperationTitle = new JLabel("Choose Operations");
        jLblOperationTitle.setSize(200, 20);
        jLblOperationTitle.setFont(new Font("Serif", Font.BOLD, 20));  
        jLblOperationTitle.setLocation(10, 10);
        
        jPanelNavigation.setLayout(new GridLayout(operations.size() + 1, 0));
        jPanelNavigation.add(jLblOperationTitle);
        
        for (int i = 0 ; i < operations.size() ; i++)
        {
            JCheckBox chk = new JCheckBox(operations.get(i));
            chk.setSize(100, 15);
            chk.setLocation(10, i * 20);
            jPanelNavigation.add(chk);
        }   
        
        jPanelNavigation.validate();
        jPanelNavigation.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelContent = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanelNav1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelNavigation = new javax.swing.JPanel();
        jPanelNav2 = new javax.swing.JPanel();
        jPanelButton = new javax.swing.JPanel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuLoadImage = new javax.swing.JMenu();
        jMenuSaveImage = new javax.swing.JMenu();
        jMenuAbout = new javax.swing.JMenu();
        jMenuExit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanelContentLayout = new javax.swing.GroupLayout(jPanelContent);
        jPanelContent.setLayout(jPanelContentLayout);
        jPanelContentLayout.setHorizontalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 860, Short.MAX_VALUE)
        );
        jPanelContentLayout.setVerticalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );

        jPanelNavigation.setLayout(new java.awt.GridLayout());
        jScrollPane1.setViewportView(jPanelNavigation);

        javax.swing.GroupLayout jPanelNav1Layout = new javax.swing.GroupLayout(jPanelNav1);
        jPanelNav1.setLayout(jPanelNav1Layout);
        jPanelNav1Layout.setHorizontalGroup(
            jPanelNav1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNav1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelNav1Layout.setVerticalGroup(
            jPanelNav1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNav1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelNav1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelNav1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelNav2Layout = new javax.swing.GroupLayout(jPanelNav2);
        jPanelNav2.setLayout(jPanelNav2Layout);
        jPanelNav2Layout.setHorizontalGroup(
            jPanelNav2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelNav2Layout.setVerticalGroup(
            jPanelNav2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelButton.setBackground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout jPanelButtonLayout = new javax.swing.GroupLayout(jPanelButton);
        jPanelButton.setLayout(jPanelButtonLayout);
        jPanelButtonLayout.setHorizontalGroup(
            jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );
        jPanelButtonLayout.setVerticalGroup(
            jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        jMenuLoadImage.setText("Load Image");
        jMenuLoadImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mnuLoadImage_OnClick(evt);
            }
        });
        jMenuBar.add(jMenuLoadImage);

        jMenuSaveImage.setText("Save Image");
        jMenuSaveImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuSaveImage_OnClick(evt);
            }
        });
        jMenuBar.add(jMenuSaveImage);

        jMenuAbout.setText("About");
        jMenuBar.add(jMenuAbout);

        jMenuExit.setText("Exit");
        jMenuBar.add(jMenuExit);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanelNav2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelNav2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuLoadImage_OnClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuLoadImage_OnClick
        
        /*Get current path and make it as default path for file dialog chooser*/
        String currPath = Paths.get("").toAbsolutePath().toString();
        
        JFileChooser fileChooser = new JFileChooser(currPath);
        int returnValue = fileChooser.showOpenDialog(this);
        File imageFile = null;
        
        if (returnValue == JFileChooser.APPROVE_OPTION)
        {
           imageFile = fileChooser.getSelectedFile();
           populateImageInput(imageFile);
        }        
    }//GEN-LAST:event_mnuLoadImage_OnClick

    private void mnuSaveImage_OnClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuSaveImage_OnClick
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuSaveImage_OnClick

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuAbout;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuExit;
    private javax.swing.JMenu jMenuLoadImage;
    private javax.swing.JMenu jMenuSaveImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelButton;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelNav1;
    private javax.swing.JPanel jPanelNav2;
    private javax.swing.JPanel jPanelNavigation;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
